关于插件的生命周期：

原CQ：框架启用事件 -> 插件启用事件 -> 其他事件 -> 插件停用事件（可选） -> 框架停用事件

其中，框架启用，插件启用需要在main线程，并且必须在windows的窗口循环中。
插件停用的执行线程以及环境已经难以追溯（因为CQ已经rip了）。
此外，插件菜单调用事件(属于其他事件)也必须在main线程中



MiraiCQ：其他事件 -> 框架停用事件

MiraiCQ为多进程框架，创建插件进程必定是要启用的，停用插件必定是要结束进程。
在插件进程启动之后，会依次调用cq的dll的框架启用和插件启用事件。
其他事件中，除原CQ的事件，还必须响应主进程的心跳事件，主进程据此来判断插件是否存活(框架内部自动响应,对插件透明)。
原CQ中的插件停用事件永不调用（因为其行为难以确定且无必要）。

其他约束：
插件进程创建到框架启用和插件启用事件返回，不能超过10秒，否则将无法响应之后的心跳事件，从而被判断为无响应，然后被强制结束。
框架停用事件的执行时间不能超过5秒，原因不用解释。
任何一个插件违反上述两条，整个MiraiCQ"立刻"打印日志，强行退出(会中断其他插件进程正在做的任何事，如写数据库)。